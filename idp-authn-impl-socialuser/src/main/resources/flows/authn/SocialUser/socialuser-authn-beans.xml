<!-- The MIT License Copyright (c) 2015 CSC - IT Center for Science, http://www.csc.fi Permission is hereby granted, free 
    of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in 
    the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, 
    sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject 
    to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial 
    portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT 
    NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
    OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. -->
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">
       
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
        p:placeholderPrefix="%{" p:placeholderSuffix="}" />

    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />

    <import resource="../../../conf/authn/socialuser-authn-config.xml" />

    <bean id="SetRPUIInformation"
            class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
            p:activationCondition-ref="shibboleth.authn.SocialUser.populateUIInfo"
            p:httpServletRequest-ref="shibboleth.HttpServletRequest">
        <property name="fallbackLanguages">
            <bean parent="shibboleth.CommaDelimStringArray" c:_0="%{idp.ui.fallbackLanguages:}" />
        </property>
    </bean>


    <bean id="ExtractSocialPrincipalsFromSubject"
        class="fi.okm.mpass.idp.authn.impl.ExtractSocialPrincipalsFromSubject" scope="prototype"
         p:httpServletRequest-ref="shibboleth.HttpServletRequest"/>    
         
     <bean id="ValidateExternalAuthentication"
            class="net.shibboleth.idp.authn.impl.ValidateExternalAuthentication" scope="prototype"
            p:classifiedMessages-ref="shibboleth.authn.SocialUser.ClassifiedMessageMap"
            p:resultCachingPredicate="#{getObject('shibboleth.authn.RemoteUser.resultCachingPredicate')}" />
    
    <bean id="ExtractSocialPrincipalsFromSubject"
        class="fi.okm.mpass.idp.authn.impl.ExtractSocialPrincipalsFromSubject" scope="prototype"/>    
     
    <bean id="SocialUserImplementationFactory"
        class="fi.okm.mpass.idp.authn.impl.SocialIdentityFactory" scope="prototype"> 
        <property name="socialImplBeans">
       	 <map>
            <entry key="/Facebook" value-ref="FacebookIdentity"/>
            <entry key="/Twitter" value-ref="TwitterIdentity"/>
            <entry key="/Google" value-ref="GoogleIdentity"/>
            <entry key="/LinkedIn" value-ref="LinkedInIdentity"/>
         </map>
        </property>
    </bean>
    
    <bean id="FacebookIdentity"
    	class="fi.okm.mpass.idp.authn.impl.FacebookIdentity" scope="prototype">
    	<property name="appId" value=""/>
    	<property name="appSecret" value=""/> 
    </bean> 
    
    <bean id="GoogleIdentity"
        class="fi.okm.mpass.idp.authn.impl.GoogleIdentity" scope="prototype">
        <property name="appId" value=""/>
        <property name="appSecret" value=""/>
        <property name="scope" value="profile"/> 
    </bean> 
    
    <bean id="TwitterIdentity"
        class="fi.okm.mpass.idp.authn.impl.TwitterIdentity" scope="prototype">
        <property name="consumerKey" value=""/>
        <property name="consumerSecret" value=""/> 
    </bean> 
    
    <bean id="LinkedInIdentity"
        class="fi.okm.mpass.idp.authn.impl.LinkedInIdentity" scope="prototype">
        <property name="appId" value=""/>
        <property name="appSecret" value=""/> 
        <property name="scope" value="rr_basicprofile"/>
    </bean> 
    
    <!--  No example authentication flow is provided for this generic bean -->
    <bean id="ExampleOpenIdConnectIdentity"
        class="fi.okm.mpass.idp.authn.impl.OpenIdConnectIdentity">
        <property name="clientId" value=""/>
        <property name="clientSecret" value=""/>
        <property name="authorizationEndpoint" value=""/>
        <property name="tokenEndpoint" value=""/>
        
        <!-- userinfo and revocation not applied yet  
        <property name="userinfoEndpoint" value=""/>
        <property name="revocationEndpoint" value=""/>
        -->
       
        <!--  oidc scope values. OPENID is set by default
        <property name="scope">
         <list>
            <value></value>
         </list>
        </property>
        -->
        
        <!-- oidc prompt value 
        <property name="prompt" value=""/>
        -->
        
        <!-- oidc display value 
        <property name="prompt" value=""/>
        -->
        
        <!--  oidc acr values
        <property name="acr">
         <list>
            <value></value>
         </list>
        </property>
        -->
        
        <!--  Mapping of claims to principals -->
        <property name="claimsPrincipals">
         <map>
            <!--  first oidc claim is always treated also as usernameprincipal -->
            <entry key="sub" value="userId"/>
            <entry key="iss" value="providerId"/>
            <!-- 
            <entry key="" value="email"/>
            <entry key="" value="firstName"/>
            <entry key="" value="lastName"/>
            -->
         </map>
        </property>
    </bean>
    
    <bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
      <property name="attributes">
          <map>
              <entry key="socialUserImplementationFactoryBeanInServletContext">
                  <ref bean="SocialUserImplementationFactory"/>
              </entry>
          </map>
      </property>
    </bean>
         
        
</beans>
